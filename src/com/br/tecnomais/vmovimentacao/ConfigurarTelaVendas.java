/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.br.tecnomais.vmovimentacao;

import com.br.tecnomais.classes.Alertas;
import com.br.tecnomais.dao.CaixaDAO;
import com.br.tecnomais.dao.ClienteDAO;
import com.br.tecnomais.dao.ConfigurarTelaVendasDAO;
import com.br.tecnomais.dao.SaidasDAO;
import com.br.tecnomais.entity.CaixaEntity;
import com.br.tecnomais.entity.ClienteEntity;
import com.br.tecnomais.entity.ConfigurarTelaVendasEntity;
import com.br.tecnomais.entity.ProdutosVendaEntity;
import com.br.tecnomais.entity.VendaEntity;
import com.br.tecnomais.vconfiguracao.CfgInicializaSaidaView;
import com.br.tecnomais.vconfiguracao.PesqCliVenCaixCfgIniVendaView;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Desenvolvimento
 */
public class ConfigurarTelaVendas extends javax.swing.JDialog {

    Integer permitirEstoqueNegativo;
    ClienteEntity ce = new ClienteEntity();
    List<ProdutosVendaEntity> lista = new ArrayList();
    VendaEntity ve = new VendaEntity();
    ConfigurarTelaVendasEntity ctve2 = new ConfigurarTelaVendasEntity();
    ConfigurarTelaVendasDAO cfgDAO = new ConfigurarTelaVendasDAO();
    VendasView vendaView = new VendasView(null, null, null, ce, null, ve);
    SaidasDAO dao = new SaidasDAO();

    Integer idComputador = 0;

    /**
     * Creates new form ConfigurarTelaVendas
     */
    public ConfigurarTelaVendas(VendasView vv) {
        initComponents();
        this.setModal(true);
        vendaView = vv;
        try {
            BufferedReader ler = new BufferedReader(new FileReader("Config/cfg.cfg"));
            idComputador = Integer.parseInt(ler.readLine());
            System.out.println("id " + idComputador);
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            ctve2 = cfgDAO.retornaCfg(idComputador);
            marcarCaixas(ctve2);
            if (ctve2.getInVendCaixa() > 0 && ctve2.getInVendCaixa() != null) {
                tfCaixa.setText(ctve2.getInVendCaixa().toString());
                pesquisarCaixa();
            }
            if (ctve2.getInVendCliente() > 0) {
                tfCliente.setText(ctve2.getInVendCliente().toString());
                pesquisarCliente();
            }
            if (ctve2.getInVendOperacao() > 0) {
                tfOperacao.setText(ctve2.getInVendOperacao().toString());
            }
            if (ctve2.getInVendVendedor() > 0) {
                tfVendedor.setText(ctve2.getInVendVendedor().toString());
                pesquisarUsuario();
            }

            if (tfOperacao.getText().equals("1")) {
                cbOperacao.setSelectedIndex(0);
            } else if (tfOperacao.getText().equals("2")) {
                cbOperacao.setSelectedIndex(1);
            } else if (tfOperacao.getText().equals("3")) {
                cbOperacao.setSelectedIndex(2);
            } else if (tfOperacao.getText().equals("4")) {
                cbOperacao.setSelectedIndex(3);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgImprimirPreVendaOps = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cbLimparTelaDeVendasAposFinalizacao = new javax.swing.JCheckBox();
        bSalvar1 = new javax.swing.JButton();
        cbPassarMercadoriaDiretoComLeitor = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfVendedor = new javax.swing.JTextField();
        tfCaixa = new javax.swing.JTextField();
        tfVendedorNome = new javax.swing.JTextField();
        tfCaiNome = new javax.swing.JTextField();
        cbOperacao = new javax.swing.JComboBox();
        tfOperacao = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfCliente = new javax.swing.JTextField();
        tfClienteNome = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbPermAlterarOperacao = new javax.swing.JCheckBox();
        cbPermAlterarVendedor = new javax.swing.JCheckBox();
        cbPermAlterarCliente = new javax.swing.JCheckBox();
        cbPermAlterarCaixa = new javax.swing.JCheckBox();
        cbMostrarOperacao = new javax.swing.JCheckBox();
        cbMostrarVendedor = new javax.swing.JCheckBox();
        cbMostrarCliente = new javax.swing.JCheckBox();
        cbMostrarCaixa = new javax.swing.JCheckBox();
        bSalvar3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cbPermitirEstoqueNegativo = new javax.swing.JCheckBox();
        bSalvar2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        cbSempreImpPreVenda = new javax.swing.JCheckBox();
        cbSemprePergImpPreVenda = new javax.swing.JCheckBox();
        cbNuncaImpPreVenda = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        cbLimparTelaDeVendasAposFinalizacao.setText("Limpar Tela de Vendas apos Finalização");

        bSalvar1.setText("Salvar");
        bSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvar1ActionPerformed(evt);
            }
        });

        cbPassarMercadoriaDiretoComLeitor.setText("Passar Mercadoria Direto com Leitor");
        cbPassarMercadoriaDiretoComLeitor.setToolTipText("Ao selecionar esta opção, quando passar mercadoria com leitor não será perguntando a quantidade, automaticamente ele adicionarar o produto com a quantidade 1 a cada vez que for passado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bSalvar1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbLimparTelaDeVendasAposFinalizacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbPassarMercadoriaDiretoComLeitor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 479, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbLimparTelaDeVendasAposFinalizacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPassarMercadoriaDiretoComLeitor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                .addComponent(bSalvar1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("     Geral     ", jPanel1);

        jLabel3.setText("Operação");

        jLabel4.setText("Vendedor");

        jLabel5.setText("Caixa");

        tfVendedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfVendedorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfVendedorFocusLost(evt);
            }
        });
        tfVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfVendedorActionPerformed(evt);
            }
        });
        tfVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfVendedorKeyPressed(evt);
            }
        });

        tfCaixa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfCaixaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfCaixaFocusLost(evt);
            }
        });
        tfCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCaixaActionPerformed(evt);
            }
        });
        tfCaixa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCaixaKeyPressed(evt);
            }
        });

        tfVendedorNome.setEditable(false);
        tfVendedorNome.setFocusable(false);

        tfCaiNome.setEditable(false);
        tfCaiNome.setFocusable(false);

        cbOperacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VENDA ESTADUAL", "PRE-VENDA", "BRINDE", "TROCA" }));
        cbOperacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOperacaoActionPerformed(evt);
            }
        });

        tfOperacao.setText("1");
        tfOperacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfOperacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfOperacaoFocusLost(evt);
            }
        });
        tfOperacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfOperacaoActionPerformed(evt);
            }
        });
        tfOperacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfOperacaoKeyPressed(evt);
            }
        });

        jLabel7.setText("Cliente");

        tfCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfClienteFocusLost(evt);
            }
        });
        tfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfClienteActionPerformed(evt);
            }
        });
        tfCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfClienteKeyPressed(evt);
            }
        });

        tfClienteNome.setEditable(false);
        tfClienteNome.setFocusable(false);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/br/tecnomais/images/Pesquisa.png"))); // NOI18N
        jLabel9.setText(".");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/br/tecnomais/images/Pesquisa.png"))); // NOI18N
        jLabel10.setText(".");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel10MousePressed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/br/tecnomais/images/Pesquisa.png"))); // NOI18N
        jLabel11.setText(".");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel11MousePressed(evt);
            }
        });

        jLabel1.setText("Permitir Alterar");

        jLabel2.setText("Mostrar");

        bSalvar3.setText("Salvar");
        bSalvar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfOperacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfVendedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCaixa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tfClienteNome)
                        .addComponent(tfVendedorNome)
                        .addComponent(tfCaiNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbPermAlterarOperacao)
                    .addComponent(cbPermAlterarVendedor)
                    .addComponent(cbPermAlterarCaixa)
                    .addComponent(cbPermAlterarCliente))
                .addGap(65, 162, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbMostrarCaixa)
                                    .addComponent(cbMostrarCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbMostrarVendedor, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbMostrarOperacao, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(21, 21, 21))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(bSalvar3)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(0, 29, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbMostrarOperacao)
                    .addComponent(cbOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPermAlterarOperacao)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tfVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMostrarVendedor)
                    .addComponent(tfVendedorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cbPermAlterarVendedor)
                    .addComponent(jLabel4))
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel10)
                    .addComponent(cbPermAlterarCliente)
                    .addComponent(cbMostrarCliente)
                    .addComponent(jLabel7)
                    .addComponent(tfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbPermAlterarCaixa)
                    .addComponent(jLabel5)
                    .addComponent(tfCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCaiNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMostrarCaixa)
                    .addComponent(jLabel11))
                .addGap(114, 114, 114)
                .addComponent(bSalvar3)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Padrões", jPanel4);

        cbPermitirEstoqueNegativo.setText("Permitir Estoque Negativo");

        bSalvar2.setText("Salvar");
        bSalvar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbPermitirEstoqueNegativo)
                .addContainerGap(553, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bSalvar2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbPermitirEstoqueNegativo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 284, Short.MAX_VALUE)
                .addComponent(bSalvar2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("     Prod / Serv.     ", jPanel2);

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bgImprimirPreVendaOps.add(cbSempreImpPreVenda);
        cbSempreImpPreVenda.setText("Sempre Imprimir Pré-Venda");

        bgImprimirPreVendaOps.add(cbSemprePergImpPreVenda);
        cbSemprePergImpPreVenda.setText("Sempre Perguntar se Deseja Imprimir Pré-Venda");

        bgImprimirPreVendaOps.add(cbNuncaImpPreVenda);
        cbNuncaImpPreVenda.setText("Nunca Imprimir Pré-Venda");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSempreImpPreVenda)
                            .addComponent(cbSemprePergImpPreVenda)
                            .addComponent(cbNuncaImpPreVenda))
                        .addGap(0, 435, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbSempreImpPreVenda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSemprePergImpPreVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbNuncaImpPreVenda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Venda", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvar1ActionPerformed
        if (ctve2.getPermitirEstqNegativo() == null) {
            salvar();
            JOptionPane.showMessageDialog(null, "Configuração salva com sucesso!!!");
        } else {
            editar();
            JOptionPane.showMessageDialog(null, "Configuração alterada com sucesso!!!");
        }
        vendaView.atualizaCfg(ctve2);
    }//GEN-LAST:event_bSalvar1ActionPerformed

    private void bSalvar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvar2ActionPerformed
        if (ctve2.getPermitirEstqNegativo() == null) {
            salvar();
            JOptionPane.showMessageDialog(null, "Configuração salva com sucesso!!!");
        } else {
            editar();
            JOptionPane.showMessageDialog(null, "Configuração alterada com sucesso!!!");
        }
    }//GEN-LAST:event_bSalvar2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (ctve2.getPermitirEstqNegativo() == null) {
            salvar();
//            JOptionPane.showMessageDialog(null, "Configuração salva com sucesso!!!");
        } else {
            editar();
//            JOptionPane.showMessageDialog(null, "Configuração alterada com sucesso!!!");
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (ctve2.getPermitirEstqNegativo() == null) {
            salvar();
            JOptionPane.showMessageDialog(null, "Configuração salva com sucesso!!!");
        } else {
            editar();
            JOptionPane.showMessageDialog(null, "Configuração alterada com sucesso!!!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tfVendedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfVendedorFocusGained
        tfVendedor.selectAll();
    }//GEN-LAST:event_tfVendedorFocusGained

    private void tfVendedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfVendedorFocusLost
        //        pesquisarUsuario();
    }//GEN-LAST:event_tfVendedorFocusLost

    private void tfVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfVendedorActionPerformed
        if (!tfVendedor.getText().isEmpty()) {
            pesquisarUsuario();
        }
    }//GEN-LAST:event_tfVendedorActionPerformed

    private void tfVendedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfVendedorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            if (!tfVendedor.getText().isEmpty()) {
                pesquisarUsuario();
            }
        }
        atalhos(evt);
    }//GEN-LAST:event_tfVendedorKeyPressed

    private void tfCaixaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCaixaFocusGained
        tfCaixa.selectAll();
    }//GEN-LAST:event_tfCaixaFocusGained

    private void tfCaixaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCaixaFocusLost
        //        pesquisarCaixa();
    }//GEN-LAST:event_tfCaixaFocusLost

    private void tfCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCaixaActionPerformed
        pesquisarCaixa();
        if (!tfCaixa.getText().isEmpty() && !tfCaiNome.getText().isEmpty()
                && !tfCliente.getText().isEmpty() && (!tfClienteNome.getText().isEmpty() && !tfClienteNome.getText().equals("") && !tfClienteNome.getText().equals(" "))
                && !tfOperacao.getText().isEmpty() && !tfVendedor.getText().isEmpty()
                && (!tfVendedorNome.getText().isEmpty() && !tfVendedorNome.getText().equals("") && !tfVendedorNome.getText().equals(" "))) {

            //            Set<AWTKeyStroke> keys = new HashSet<AWTKeyStroke>();
            //            keys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, 0));
            //            KeyboardFocusManager.getCurrentKeyboardFocusManager().setDefaultFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, keys);
            //            new VendasView(cbOperacao.getSelectedItem().toString(), tfVendedorNome.getText(), tfCaiNome.getText(), ce, lista, ve).setVisible(true);
            //            this.dispose();
        } else {
            new Alertas().mensagemAviso("Preencha todos os campos de forma correta!");
            if (tfCaixa.getText().isEmpty()) {
                tfCaixa.requestFocus();
            }
            if (tfCliente.getText().isEmpty()) {
                tfCliente.requestFocus();
            }
            if (tfVendedor.getText().isEmpty()) {
                tfVendedor.requestFocus();
            }
        }
    }//GEN-LAST:event_tfCaixaActionPerformed

    private void tfCaixaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCaixaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            pesquisarCaixa();
            //            if (!tfCaixa.getText().isEmpty() && !tfCaiNome.getText().isEmpty()
            //                    && !tfCliente.getText().isEmpty() && (!tfClienteNome.getText().isEmpty() && !tfClienteNome.getText().equals("") && !tfClienteNome.getText().equals(" "))
            //                    && !tfOperacao.getText().isEmpty() && !tfVendedor.getText().isEmpty()
            //                    && (!tfVendedorNome.getText().isEmpty() && !tfVendedorNome.getText().equals("") && !tfVendedorNome.getText().equals(" "))) {
            //                System.out.println("tf " + tfVendedorNome.getText());
            //
            //                Set<AWTKeyStroke> keys = new HashSet<AWTKeyStroke>();
            //                keys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, 0));
            //                KeyboardFocusManager.getCurrentKeyboardFocusManager().setDefaultFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, keys);
            //                new VendasView(cbOperacao.getSelectedItem().toString(), tfVendedorNome.getText(), tfCaiNome.getText(), ce, lista, ve).setVisible(true);
            //                this.dispose();
            //            } else {
            //                alerta.mensagemAviso("Preencha todos os campos de forma correta!");
            //            }
        }
        atalhos(evt);
    }//GEN-LAST:event_tfCaixaKeyPressed

    private void cbOperacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOperacaoActionPerformed
        if (cbOperacao.getSelectedIndex() == 0) {
            tfOperacao.setText("1");
        } else if (cbOperacao.getSelectedIndex() == 1) {
            tfOperacao.setText("2");
        } else if (cbOperacao.getSelectedIndex() == 2) {
            tfOperacao.setText("3");
        } else if (cbOperacao.getSelectedIndex() == 3) {
            tfOperacao.setText("4");
        } else {
            int i = 0;
            while (i == 0) {
                new Alertas().mensagemAviso("Códifica esssa porra direito mah");
            }
        }
    }//GEN-LAST:event_cbOperacaoActionPerformed

    private void tfOperacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfOperacaoFocusGained
        tfOperacao.selectAll();
    }//GEN-LAST:event_tfOperacaoFocusGained

    private void tfOperacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfOperacaoFocusLost

    }//GEN-LAST:event_tfOperacaoFocusLost

    private void tfOperacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfOperacaoActionPerformed
        actionCamp1();
    }//GEN-LAST:event_tfOperacaoActionPerformed

    private void tfOperacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfOperacaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            actionCamp1();
        }
        atalhos(evt);
    }//GEN-LAST:event_tfOperacaoKeyPressed

    private void tfClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfClienteFocusGained
        tfCliente.selectAll();
    }//GEN-LAST:event_tfClienteFocusGained

    private void tfClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfClienteFocusLost
        //        pesquisarCliente();
    }//GEN-LAST:event_tfClienteFocusLost

    private void tfClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfClienteActionPerformed
        if (!tfCliente.getText().isEmpty()) {
            pesquisarCliente();
        }
    }//GEN-LAST:event_tfClienteActionPerformed

    private void tfClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfClienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            if (!tfCliente.getText().isEmpty()) {
                pesquisarCliente();
            }
        }
        atalhos(evt);
    }//GEN-LAST:event_tfClienteKeyPressed

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
        PesqCliVenCaixCfgIniVendaView pesqCli = new PesqCliVenCaixCfgIniVendaView(null, true, 2);
        pesqCli.setVisible(true);
        tfVendedor.setText(pesqCli.retornaid().toString());
        tfVendedorNome.setText(" ");
        tfVendedor.requestFocus();
    }//GEN-LAST:event_jLabel9MousePressed

    private void jLabel10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MousePressed
        PesqCliVenCaixCfgIniVendaView pesqCli = new PesqCliVenCaixCfgIniVendaView(null, true, 3);
        pesqCli.setVisible(true);
        tfCliente.setText(pesqCli.retornaid().toString());
        tfClienteNome.setText(" ");
        tfCliente.requestFocus();
    }//GEN-LAST:event_jLabel10MousePressed

    private void jLabel11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MousePressed
        PesqCliVenCaixCfgIniVendaView pesqCli = new PesqCliVenCaixCfgIniVendaView(null, true, 4);
        pesqCli.setVisible(true);
        tfCaixa.setText(pesqCli.retornaid().toString());
        tfCaiNome.setText(" ");
        tfCaixa.requestFocus();
    }//GEN-LAST:event_jLabel11MousePressed

    private void bSalvar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvar3ActionPerformed
        if (ctve2.getPermitirEstqNegativo() == null) {
            salvar();
            JOptionPane.showMessageDialog(null, "Configuração salva com sucesso!!!");
        } else {
            editar();
            JOptionPane.showMessageDialog(null, "Configuração alterada com sucesso!!!");
        }
    }//GEN-LAST:event_bSalvar3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigurarTelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigurarTelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigurarTelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigurarTelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConfigurarTelaVendas dialog = new ConfigurarTelaVendas(null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bSalvar1;
    private javax.swing.JButton bSalvar2;
    private javax.swing.JButton bSalvar3;
    private javax.swing.ButtonGroup bgImprimirPreVendaOps;
    private javax.swing.JCheckBox cbLimparTelaDeVendasAposFinalizacao;
    private javax.swing.JCheckBox cbMostrarCaixa;
    private javax.swing.JCheckBox cbMostrarCliente;
    private javax.swing.JCheckBox cbMostrarOperacao;
    private javax.swing.JCheckBox cbMostrarVendedor;
    private javax.swing.JCheckBox cbNuncaImpPreVenda;
    private javax.swing.JComboBox cbOperacao;
    private javax.swing.JCheckBox cbPassarMercadoriaDiretoComLeitor;
    private javax.swing.JCheckBox cbPermAlterarCaixa;
    private javax.swing.JCheckBox cbPermAlterarCliente;
    private javax.swing.JCheckBox cbPermAlterarOperacao;
    private javax.swing.JCheckBox cbPermAlterarVendedor;
    private javax.swing.JCheckBox cbPermitirEstoqueNegativo;
    private javax.swing.JCheckBox cbSempreImpPreVenda;
    private javax.swing.JCheckBox cbSemprePergImpPreVenda;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField tfCaiNome;
    private javax.swing.JTextField tfCaixa;
    private javax.swing.JTextField tfCliente;
    private javax.swing.JTextField tfClienteNome;
    private javax.swing.JTextField tfOperacao;
    private javax.swing.JTextField tfVendedor;
    private javax.swing.JTextField tfVendedorNome;
    // End of variables declaration//GEN-END:variables

    private void salvar() {
        ConfigurarTelaVendasEntity ctve = new ConfigurarTelaVendasEntity();
        ctve = opcoes(ctve);
        
        if (tfCaixa.getText().isEmpty()) {
            ctve.setInVendCaixa(0);
        } else {
            ctve.setInVendCaixa(Integer.parseInt(tfCaixa.getText()));
        }

        if (tfCliente.getText().isEmpty()) {
            ctve.setInVendCliente(0);
        } else {
            ctve.setInVendCliente(Integer.parseInt(tfCliente.getText()));
        }

        if (tfOperacao.getText().isEmpty()) {
            ctve.setInVendOperacao(0);
        } else {
            ctve.setInVendOperacao(Integer.parseInt(tfOperacao.getText()));
        }

        if (tfOperacao.getText().isEmpty()) {
            ctve.setInVendVendedor(0);
        } else {
            ctve.setInVendVendedor(Integer.parseInt(tfVendedor.getText()));
        }

        cfgDAO.salvarCfg(ctve);
        this.ctve2 = ctve;
    }

    private void editar() {
        ConfigurarTelaVendasEntity ctve = new ConfigurarTelaVendasEntity();
        ctve = opcoes(ctve);
        
        if (tfCaixa.getText().isEmpty() || tfCaixa.getText().equals("")) {
            ctve.setInVendCaixa(0);
        } else {
            ctve.setInVendCaixa(Integer.parseInt(tfCaixa.getText()));
        }

        if (tfCliente.getText().isEmpty() || tfCliente.getText().equals("")) {
            ctve.setInVendCliente(0);
        } else {
            ctve.setInVendCliente(Integer.parseInt(tfCliente.getText()));
        }

        if (tfOperacao.getText().isEmpty() || tfOperacao.getText().equals("")) {
            ctve.setInVendOperacao(0);
        } else {
            ctve.setInVendOperacao(Integer.parseInt(tfOperacao.getText()));
        }

        if (tfVendedor.getText().isEmpty() || tfVendedor.getText().equals("")) {
            ctve.setInVendVendedor(0);
        } else {
            ctve.setInVendVendedor(Integer.parseInt(tfVendedor.getText()));
        }

        cfgDAO.updateCfg(ctve);
        this.ctve2 = ctve;
    }

    public ConfigurarTelaVendasEntity opcoes(ConfigurarTelaVendasEntity ctve) {

        //ConfigurarTelaVendasEntity ctve = new ConfigurarTelaVendasEntity();
        if (cbLimparTelaDeVendasAposFinalizacao.isSelected()) {
            ctve.setLimparTelaVendasAposFinalizar(1);
        } else {
            ctve.setLimparTelaVendasAposFinalizar(0);
        }

        if (cbPermitirEstoqueNegativo.isSelected()) {
            ctve.setPermitirEstqNegativo(1);
        } else {
            ctve.setPermitirEstqNegativo(0);
        }

        if (cbSempreImpPreVenda.isSelected()) {
            ctve.setSempreImpPreVenda(1);
        } else {
            ctve.setSempreImpPreVenda(0);
        }

        if (cbSemprePergImpPreVenda.isSelected()) {
            ctve.setSemprePergImpPreVenda(1);
        } else {
            ctve.setSemprePergImpPreVenda(0);
        }

        if (cbNuncaImpPreVenda.isSelected()) {
            ctve.setNuncaImpPreVenda(1);
        } else {
            ctve.setNuncaImpPreVenda(0);
        }

        if (cbPassarMercadoriaDiretoComLeitor.isSelected()) {
            ctve.setPassarMercadoriaDiretoComLeitor(1);
        } else {
            ctve.setPassarMercadoriaDiretoComLeitor(0);
        }

        if (cbPermAlterarCaixa.isSelected()) {
            ctve.setPermAlteraCaixa(1);
        } else {
            ctve.setPermAlteraCaixa(0);
        }

        if (cbPermAlterarCliente.isSelected()) {
            ctve.setPermAlteraCliente(1);
        } else {
            ctve.setPermAlteraCliente(0);
        }
        if (cbPermAlterarOperacao.isSelected()) {
            ctve.setPermAlteraOperacao(1);
        } else {
            ctve.setPermAlteraOperacao(0);
        }

        if (cbPermAlterarVendedor.isSelected()) {
            ctve.setPermAlteraVendedor(1);
        } else {
            ctve.setPermAlteraVendedor(0);
        }

        if (cbMostrarCaixa.isSelected()) {
            ctve.setMostraCaixa(1);
        } else {
            ctve.setMostraCaixa(0);
        }

        if (cbMostrarCliente.isSelected()) {
            ctve.setMostraCliente(1);
        } else {
            ctve.setMostraCliente(0);
        }

        if (cbMostrarOperacao.isSelected()) {
            ctve.setMostraOperacao(1);
        } else {
            ctve.setMostraOperacao(0);
        }

        if (cbMostrarVendedor.isSelected()) {
            ctve.setMostraVendedor(1);
        } else {
            ctve.setMostraVendedor(0);
        }
        ctve.setIdComputador(idComputador);
        return ctve;
    }

    public void marcarCaixas(ConfigurarTelaVendasEntity ctve) {
        if (ctve.getLimparTelaVendasAposFinalizar() == 1) {
            cbLimparTelaDeVendasAposFinalizacao.setSelected(true);
        }
        if (ctve.getPermitirEstqNegativo() == 1) {
            cbPermitirEstoqueNegativo.setSelected(true);
        }
        if (ctve.getSempreImpPreVenda() == 1) {
            cbSempreImpPreVenda.setSelected(true);
        }
        if (ctve.getSemprePergImpPreVenda() == 1) {
            cbSemprePergImpPreVenda.setSelected(true);
        }
        if (ctve.getNuncaImpPreVenda() == 1) {
            cbNuncaImpPreVenda.setSelected(true);
        }
        if (ctve.getPassarMercadoriaDiretoComLeitor() == 1) {
            cbPassarMercadoriaDiretoComLeitor.setSelected(true);
        }
        if (ctve.getPermAlteraCaixa() == 1) {
            cbPermAlterarCaixa.setSelected(true);
        }
        if (ctve.getPermAlteraCliente() == 1) {
            cbPermAlterarCliente.setSelected(true);
        }
        if (ctve.getPermAlteraOperacao() == 1) {
            cbPermAlterarOperacao.setSelected(true);
        }
        if (ctve.getPermAlteraVendedor() == 1) {
            cbPermAlterarVendedor.setSelected(true);
        }
        if (ctve.getMostraCaixa() == 1) {
            cbMostrarCaixa.setSelected(true);
        }
        if (ctve.getMostraCliente() == 1) {
            cbMostrarCliente.setSelected(true);
        }
        if (ctve.getMostraOperacao() == 1) {
            cbMostrarOperacao.setSelected(true);
        }
        if (ctve.getMostraVendedor() == 1) {
            cbMostrarVendedor.setSelected(true);
        }
    }

    private void desabilitarCampos() {
        tfVendedorNome.setEditable(false);
        tfOperacao.setEditable(false);
        tfCaiNome.setEditable(false);
    }

    private void pesquisarUsuario() {
        try {
            String result = dao.selecionaUsuario(Integer.parseInt(tfVendedor.getText()));
            tfVendedorNome.setText(result);
            if (result.length() > 1) {
                tfCliente.requestFocus();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void pesquisarCaixa() {
        try {
            CaixaDAO dao = new CaixaDAO();
            for (CaixaEntity caixa : dao.selecionaCaixa(Integer.parseInt(tfCaixa.getText()))) {
                tfCaiNome.setText(caixa.getNome());
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void pesquisarCliente() {
        try {
            ClienteEntity ce = new ClienteEntity();
            ce.setId(Integer.parseInt(tfCliente.getText()));
            ClienteDAO dao = new ClienteDAO();
            tfClienteNome.setText(" ");
            for (ClienteEntity cliente : dao.selecionaCliente(ce)) {
                if (!cliente.getNome().equals(" ") || !cliente.getNome().equals("")) {
                    tfClienteNome.setText(cliente.getNome());
                    tfCaixa.requestFocus();
                }
                this.ce = cliente;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void atalhos(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_F12) {
            if (tfOperacao.getText().isEmpty() || tfVendedor.getText().isEmpty() || tfCaixa.getText().isEmpty() || tfCliente.getText().isEmpty() || tfVendedorNome.getText().isEmpty()) {
                new Alertas().mensagemAviso("Preencha todos os campos!");
            } else {
                pesquisarCliente();
                pesquisarCaixa();
                pesquisarUsuario();

//                if (ctve == null) {
//                    salvarCfg();
//                    new Alertas().mensagemConfirmacao("Configuração Salva com Sucesso!");
//                } else {
//                    updateCfg();
//                    new Alertas().mensagemConfirmacao("Configuração Alterada com Sucesso!");
//                }
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            this.dispose();
        }
    }

    private void actionCamp1() {
        Integer cod = Integer.parseInt(tfOperacao.getText());
        if (cod < 5 && cod > 0) {
            if (cod == 1) {
                cbOperacao.setSelectedIndex(0);
                tfVendedor.requestFocus();
            }
            if (cod == 2) {
                cbOperacao.setSelectedIndex(1);
                tfVendedor.requestFocus();
            }
            if (cod == 3) {
                cbOperacao.setSelectedIndex(2);
                tfVendedor.requestFocus();
            }
            if (cod == 4) {
                tfVendedor.requestFocus();
                cbOperacao.setSelectedIndex(3);
            }
        } else {
            new Alertas().mensagemAviso("O intervalo do campo deve ser entre 1 e 4");
            tfOperacao.requestFocus();
            tfOperacao.selectAll();
        }
    }

//    private void salvarCfg() {
//        ConfigurarTelaVendasEntity ctve = new ConfigurarTelaVendasEntity();
//        ctve.setInVendCaixa(Integer.parseInt(tfCaixa.getText()));
//        ctve.setInVendCliente(Integer.parseInt(tfCliente.getText()));
//        ctve.setInVendOperacao(Integer.parseInt(tfOperacao.getText()));
//        ctve.setInVendVendedor(Integer.parseInt(tfVendedor.getText()));
//
//        cfgDAO.salvarInCfg(ctve);
//    }
//
//    private void updateCfg() {
//        ConfigurarTelaVendasEntity ctve = new ConfigurarTelaVendasEntity();
//        ctve.setInVendCaixa(Integer.parseInt(tfCaixa.getText()));
//        ctve.setInVendCliente(Integer.parseInt(tfCliente.getText()));
//        ctve.setInVendOperacao(Integer.parseInt(tfOperacao.getText()));
//        ctve.setInVendVendedor(Integer.parseInt(tfVendedor.getText()));
//
//        cfgDAO.updateInCfg(ctve);
//
//    }
}
