/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.br.tecnomais.vmovimentacao;

import com.br.tecnomais.classes.NovaData;
import com.br.tecnomais.dao.CaixaDAO;
import com.br.tecnomais.dao.ClienteDAO;
import com.br.tecnomais.dao.EntradaDAO;
import com.br.tecnomais.dao.FornecedorDAO;
import com.br.tecnomais.dao.UsuarioDAO;
import com.br.tecnomais.entity.CaixaEntity;
import com.br.tecnomais.entity.ClienteEntity;
import com.br.tecnomais.entity.EntradasEntity;
import com.br.tecnomais.entity.FornecedorEntity;
import com.br.tecnomais.entity.UsuarioEntity;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class PesqCliVenCaixForIniVendaView extends javax.swing.JDialog {

    /**
     * Creates new form PesqCliVenCaixForIniVendaView
     */
    Integer op = 0;
    Integer idAtual = 0;
    UsuarioDAO usuarioDAO = new UsuarioDAO();
    ClienteDAO clienteDAO = new ClienteDAO();
    CaixaDAO caixaDAO = new CaixaDAO();
    FornecedorDAO fornecedorDAO = new FornecedorDAO();
    NovaData novaData = new NovaData();
    String dataAtual = "";
    String strNome;

    public PesqCliVenCaixForIniVendaView(java.awt.Frame parent, boolean modal, Integer op) {
        super(parent, modal);
        initComponents();
        this.op = op;
        this.setModal(true);
        if (op == 2) {
            lbSeleciona.setText("Seleciona Vendedor");
            escondeCampTab();
            esconderCamposData();
        }
        if (op == 3) {
            lbSeleciona.setText("Seleciona Cliente");
            escondeCampTab();
            esconderCamposData();
        }
        if (op == 4) {
            lbSeleciona.setText("Seleciona Caixa");
            escondeCampTab();
            esconderCamposData();
        }
        if (op == 5) {
            lbSeleciona.setText("Seleciona Fornecedor");
            escondeCampTab();
            esconderCamposData();
        }
        if (op == 6) {
//            tbTabela.getColumnModel().getColumn(2).;
            dataAtual = novaData.dataAtual();
            tfDataInicial.setText(dataAtual);
            tfDataFinal.setText(dataAtual);
            lbSeleciona.setText("Seleciona Sequência");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbSeleciona = new javax.swing.JLabel();
        tfPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        lbDataInicial = new javax.swing.JLabel();
        tfDataInicial = new javax.swing.JFormattedTextField();
        lbDataFinal = new javax.swing.JLabel();
        tfDataFinal = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(200, 210, 210));

        lbSeleciona.setBackground(new java.awt.Color(170, 180, 180));
        lbSeleciona.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbSeleciona.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSeleciona.setText("Pesquisa Cliente");
        lbSeleciona.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lbSeleciona.setOpaque(true);

        tfPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPesquisaActionPerformed(evt);
            }
        });
        tfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPesquisaKeyPressed(evt);
            }
        });

        tbTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Valor Total", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbTabelaMousePressed(evt);
            }
        });
        tbTabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbTabelaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbTabela);

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbDataInicial.setText("Data Inicial");

        try {
            tfDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbDataFinal.setText("Data Final");

        try {
            tfDataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbSeleciona, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(lbDataInicial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDataFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfDataFinal, tfDataInicial});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbSeleciona, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDataInicial)
                    .addComponent(tfDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDataFinal)
                    .addComponent(tfDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPesquisaActionPerformed
        pesquisas();
    }//GEN-LAST:event_tfPesquisaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pesquisas();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tbTabelaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTabelaMousePressed

    }//GEN-LAST:event_tbTabelaMousePressed

    private void tbTabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbTabelaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int linha = tbTabela.getSelectedRow();
            idAtual = Integer.parseInt(tbTabela.getValueAt(linha, 0).toString());
            strNome = tbTabela.getValueAt(linha, 1).toString();
            this.dispose();
        } else {
            System.out.println("nada");
        }
    }//GEN-LAST:event_tbTabelaKeyPressed

    private void tfPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesquisaKeyPressed
        if (evt.getKeyCode() == 40) {// AO apertar para baixo
            if (tbTabela.getRowCount() > 0) {
                tbTabela.requestFocus();
                tbTabela.addRowSelectionInterval(0, 0);

                int linha = tbTabela.getSelectedRow();

                idAtual = Integer.parseInt(tbTabela.getValueAt(linha, 0).toString());
            }
        }
    }//GEN-LAST:event_tfPesquisaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesqCliVenCaixForIniVendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesqCliVenCaixForIniVendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesqCliVenCaixForIniVendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesqCliVenCaixForIniVendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PesqCliVenCaixForIniVendaView dialog = new PesqCliVenCaixForIniVendaView(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDataFinal;
    private javax.swing.JLabel lbDataInicial;
    private javax.swing.JLabel lbSeleciona;
    private javax.swing.JTable tbTabela;
    private javax.swing.JFormattedTextField tfDataFinal;
    private javax.swing.JFormattedTextField tfDataInicial;
    private javax.swing.JTextField tfPesquisa;
    // End of variables declaration//GEN-END:variables

    private void pesquisas() {
        if (op == 2) {
            DefaultTableModel tb = (DefaultTableModel) tbTabela.getModel();
            tb.setNumRows(0);
            try {
                String nome = tfPesquisa.getText() + "%";
                for (UsuarioEntity usuarioEntity : usuarioDAO.listar(nome)) {
                    tb.addRow(new Object[]{usuarioEntity.getId(), usuarioEntity.getNome_usuario()});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (op == 3) {
            DefaultTableModel tb = (DefaultTableModel) tbTabela.getModel();
            tb.setNumRows(0);
            try {
                String nome = tfPesquisa.getText() + "%";
                for (ClienteEntity cli : clienteDAO.listar(nome)) {
                    tb.addRow(new Object[]{cli.getId(), cli.getNome()});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (op == 4) {
            try {
                DefaultTableModel tb = (DefaultTableModel) tbTabela.getModel();
                tb.setNumRows(0);
                CaixaEntity ce = new CaixaEntity();
                String nome = (tfPesquisa.getText() + "%");
                for (CaixaEntity cls : caixaDAO.listar(nome)) {
                    tb.addRow(new Object[]{cls.getId(), cls.getNome()});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (op == 5) {
            try {
                DefaultTableModel tb = (DefaultTableModel) tbTabela.getModel();
                tb.setNumRows(0);
                FornecedorEntity forn = new FornecedorEntity();
                String nome = (tfPesquisa.getText() + "%");
                for (FornecedorEntity forne : fornecedorDAO.listar(nome)) {
                    tb.addRow(new Object[]{forne.getId(), forne.getNome()});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        if (op == 6) {
            EntradaDAO eDAO = new EntradaDAO();
            EntradasEntity ee = new EntradasEntity();
            try {
                DefaultTableModel tb = (DefaultTableModel) tbTabela.getModel();
                tb.setNumRows(0);
                EntradasEntity forn = new EntradasEntity();
                String nome = tfPesquisa.getText();
                List<EntradasEntity> listEnt = new ArrayList();
                if (tfPesquisa.isVisible() && tfPesquisa.getText().isEmpty()) {
                    listEnt = eDAO.listarSequencia(nome, tfDataInicial.getText(), tfDataFinal.getText());
                } else {
                    listEnt = eDAO.listarSequencia(nome, " ", " ");
                }

                for (EntradasEntity entrada : listEnt) {
                    tb.addRow(new Object[]{entrada.getCodigoEntrada(), entrada.getFornecedor(), new DecimalFormat("0.00").format(entrada.getVlrTotal() / 100), entrada.getDataEntrada()});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public Integer retornaid() {
        return idAtual;
    }

    private void escondeCampTab() {
        tbTabela.getColumnModel().getColumn(2).setMinWidth(0);
        tbTabela.getColumnModel().getColumn(2).setPreferredWidth(0);
        tbTabela.getColumnModel().getColumn(2).setMaxWidth(0);

        tbTabela.getColumnModel().getColumn(3).setMinWidth(0);
        tbTabela.getColumnModel().getColumn(3).setPreferredWidth(0);
        tbTabela.getColumnModel().getColumn(3).setMaxWidth(0);

    }

    private void esconderCamposData() {
        lbDataFinal.setVisible(false);
        lbDataInicial.setVisible(false);
        tfDataFinal.setVisible(false);
        tfDataInicial.setVisible(false);
    }
    
    public String getStr(){
        return strNome;
    }
    
}
